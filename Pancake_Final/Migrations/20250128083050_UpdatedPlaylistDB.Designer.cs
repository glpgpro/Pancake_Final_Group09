// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pancake_Final.Data;

#nullable disable

namespace Pancake_Final.Migrations
{
    [DbContext(typeof(Pancake_FinalContext))]
    [Migration("20250128083050_UpdatedPlaylistDB")]
    partial class UpdatedPlaylistDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Pancake_Final.Data.Pancake_FinalUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "3781efa7-66dc-47f0-860f-e506d04102e4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d12a5e95-c5d4-4b79-98cf-ea410b9a27dd",
                            Email = "admin@localhost.com",
                            EmailConfirmed = true,
                            FirstName = "Admin",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@LOCALHOST.COM",
                            NormalizedUserName = "ADMIN@LOCALHOST.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEGlFnAnlLk/UoTo6oXOd0WUsEyjYKbYY9ze+H8slZKO6QMWT9dVwsZFAk0coc2cgjw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b42f8dd3-716d-4198-8357-66fdeb502ff6",
                            TwoFactorEnabled = false,
                            UserName = "admin@localhost.com"
                        });
                });

            modelBuilder.Entity("Pancake_Final.Domain.Album", b =>
                {
                    b.Property<int>("AlbumID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlbumID"));

                    b.Property<byte>("AlbumImage")
                        .HasColumnType("tinyint");

                    b.Property<int>("ArtistID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("GenID")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AlbumID");

                    b.ToTable("Album");
                });

            modelBuilder.Entity("Pancake_Final.Domain.Artists", b =>
                {
                    b.Property<int>("ArtistID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtistID"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.HasKey("ArtistID");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("Pancake_Final.Domain.Genre", b =>
                {
                    b.Property<string>("GenreID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreID");

                    b.ToTable("Genre");
                });

            modelBuilder.Entity("Pancake_Final.Domain.ListeningHistory", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryId"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SongId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("HistoryId");

                    b.ToTable("ListeningHistory");
                });

            modelBuilder.Entity("Pancake_Final.Domain.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PayId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethod");
                });

            modelBuilder.Entity("Pancake_Final.Domain.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CoverImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlaylistID")
                        .HasColumnType("int");

                    b.Property<string>("PlaylistName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Playlist");
                });

            modelBuilder.Entity("Pancake_Final.Domain.Song", b =>
                {
                    b.Property<int>("SongId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SongId"));

                    b.Property<int>("AlbumID")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int?>("ArtistsArtistID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenID")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("LikedS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlaylistId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SongId");

                    b.HasIndex("ArtistsArtistID");

                    b.HasIndex("PlaylistId");

                    b.ToTable("Song");

                    b.HasData(
                        new
                        {
                            SongId = 1,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7280),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7290),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Don Toliver - No Pole.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Don Toliver - No Pole",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 2,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7297),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7297),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Genshin Impact丨Zhongli Theme musicListenerOST原神钟离听书人.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Genshin Impact丨Zhongli Theme musicListenerOST原神钟离听书人",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 3,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7299),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7299),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Goblin Slayer - Rightfully _ Mili [Full].mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Goblin Slayer - Rightfully _ Mili [Full]",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 4,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7301),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7301),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Goblins from Mars  - Put Your Love In Dreamz.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Goblins from Mars  - Put Your Love In Dreamz",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 5,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7302),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7303),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Goblins from Mars - Cold Blooded Love (ft. Krista Marina).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Goblins from Mars - Cold Blooded Love (ft. Krista Marina)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 6,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7305),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7305),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Goblins from Mars - Heart Afire When The Bassjumps.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Goblins from Mars - Heart Afire When The Bassjumps",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 7,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7307),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7307),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Gotoubun no Hanayome Ending Full SignCandy Flavor - Aya Uchida Lyrics [CC].mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Gotoubun no Hanayome Ending Full SignCandy Flavor - Aya Uchida Lyrics [CC]",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 8,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7308),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7309),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Grancrest Senki Opening 2 Full _ Rin - ASCA Lyrics [CC].mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Grancrest Senki Opening 2 Full _ Rin - ASCA Lyrics [CC]",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 9,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7310),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7310),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\grandson - Despicable.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "grandson - Despicable",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 10,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7312),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7313),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Greatest Battle Music Of All Times Saijaku Muhai.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Greatest Battle Music Of All Times Saijaku Muhai",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 11,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7314),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7314),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Gundam - OP1 HD.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Gundam - OP1 HD",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 12,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7315),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7315),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Gundam - Seed.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Gundam - Seed",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 13,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7317),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7317),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Hans Zimmer - Flight.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Hans Zimmer - Flight",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 14,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7318),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7319),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Hiroyuki Sawano ashes Suite [vocal gemie] Epic Battle Music.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Hiroyuki Sawano ashes Suite [vocal gemie] Epic Battle Music",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 15,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7320),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7320),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Hiroyuki Sawano Impure King Suite Epic Battle Music.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Hiroyuki Sawano Impure King Suite Epic Battle Music",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 16,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7322),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7322),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\HOPE.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "HOPE",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 17,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7323),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7324),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\HOTD - Pentakill .mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "HOTD - Pentakill ",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 18,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7325),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7326),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\i feel like i did too much Don Toliver - No Idea (Lyrics).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "i feel like i did too much Don Toliver - No Idea (Lyrics)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 19,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7327),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7327),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\I NEED U (Official MV).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "I NEED U (Official MV)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 20,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7329),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7329),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\IDOL Official MV.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "IDOL Official MV",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 21,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7330),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7331),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Imagine Dragons - Believer (Romy Wave Cover) [Not So Good Remix].mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Imagine Dragons - Believer (Romy Wave Cover) [Not So Good Remix]",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 22,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7332),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7332),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Imagine Dragons - Believer.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Imagine Dragons - Believer",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 23,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7333),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7334),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\ISLAND OST - Island Opening Full「Eien no Hitotsu」.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "ISLAND OST - Island Opening Full「Eien no Hitotsu」",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 24,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7335),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7335),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\ISLAND OST - Lasting Memories FULL.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "ISLAND OST - Lasting Memories FULL",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 25,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7337),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7337),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\J.Fla  - Havana.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "J.Fla  - Havana",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 26,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7338),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7338),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Jacob Lee - Demons.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Jacob Lee - Demons",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 27,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7340),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7340),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Jaden - GOKU.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Jaden - GOKU",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 28,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7341),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7342),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Justin Stone - Lungs (Prod. Alex Collins).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Justin Stone - Lungs (Prod. Alex Collins)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 29,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7343),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7343),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Kaguya-Sama - Love is war (feat. Masayuki Suzuki) .mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Kaguya-Sama - Love is war (feat. Masayuki Suzuki) ",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 30,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7345),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7345),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Kaguya-sama Love is War Season 2 - Opening FullDADDY! DADDY! DO!by Masayuki Suzuki.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Kaguya-sama Love is War Season 2 - Opening FullDADDY! DADDY! DO!by Masayuki Suzuki",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 31,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7346),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7347),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Kakusei [Awakening].mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Kakusei [Awakening]",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 32,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7386),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7386),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Kamikaze Feat. Lox Chatterbox.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Kamikaze Feat. Lox Chatterbox",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 33,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7388),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7388),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\KANA-BOON - Silhouette.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "KANA-BOON - Silhouette",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 34,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7390),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7390),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\KDA - POPSTARS (ft. Madison Beer, (G)I-DLE, Jaira Burns) Music Video - League of Legends.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "KDA - POPSTARS (ft. Madison Beer, (G)I-DLE, Jaira Burns) Music Video - League of Legends",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 35,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7392),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7392),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Kenshi Yonezu (米津玄師) - Peace Sign (KanRomEng Lyrics)Boku no Hero Academia Season 2 OP.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Kenshi Yonezu (米津玄師) - Peace Sign (KanRomEng Lyrics)Boku no Hero Academia Season 2 OP",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 36,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7393),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7393),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\khai dreams - sunkissed.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "khai dreams - sunkissed",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 37,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7394),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7395),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Kibou No Uta Lyrics.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Kibou No Uta Lyrics",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 38,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7396),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7396),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Krewella - Calm Down (SKAN Remix).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Krewella - Calm Down (SKAN Remix)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 39,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7397),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7398),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\KSI & Randolph - Champagne (Official Audio).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "KSI & Randolph - Champagne (Official Audio)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 40,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7399),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7399),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\KUURO - Afraid of the Dark (feat. Sophiya) .mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "KUURO - Afraid of the Dark (feat. Sophiya) ",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 41,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7400),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7400),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\KUURO - What U Wanna Do.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "KUURO - What U Wanna Do",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 42,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7402),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7402),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\LAYTO - Little Poor Me.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "LAYTO - Little Poor Me",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 43,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7403),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7404),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Legends Never Die (ft. Against The Current) [OFFICIAL AUDIO] Worlds 2017 - League of Legends.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Legends Never Die (ft. Against The Current) [OFFICIAL AUDIO] Worlds 2017 - League of Legends",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 44,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7405),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7405),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Leonhart - Grancrest Senki OST - Hope.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Leonhart - Grancrest Senki OST - Hope",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 45,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7406),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7407),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Leonhart - Grancrest Senki OST.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Leonhart - Grancrest Senki OST",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 46,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7408),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7408),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Liam Ferrari - I Like The Way.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Liam Ferrari - I Like The Way",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 47,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7410),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7410),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Lil Nas X Billy Ray Cyrus - Old Town Road (Remix).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Lil Nas X Billy Ray Cyrus - Old Town Road (Remix)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 48,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7411),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7411),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\LIL SKIES - Boss Up.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "LIL SKIES - Boss Up",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 49,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7413),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7413),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\LIL SKIES - Lust.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "LIL SKIES - Lust",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 50,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7414),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7414),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Lil Uzi Vert - XO Tour Llif3 .mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Lil Uzi Vert - XO Tour Llif3 ",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 51,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7416),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7416),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Lilianna Wilde - Grind Me Down (Jawster Remix).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Lilianna Wilde - Grind Me Down (Jawster Remix)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 52,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7417),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7417),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\LiSA - Catch the Moment.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "LiSA - Catch the Moment",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 53,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7418),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7419),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\LiSA - Crossing Field.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "LiSA - Crossing Field",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 54,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7420),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7420),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Look Alive [BASS BOOSTED].mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Look Alive [BASS BOOSTED]",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 55,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7421),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7422),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Lyrics Owari no Seraph OST - 108.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Lyrics Owari no Seraph OST - 108",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 56,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7423),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7423),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\MADKID - RISE Tate no Yuusha no Nariagari Full [OpeningApertura] HQ.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "MADKID - RISE Tate no Yuusha no Nariagari Full [OpeningApertura] HQ",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 57,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7425),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7425),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Magnolia.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Magnolia",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 58,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7426),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7426),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Maroon 5 - Sugar.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Maroon 5 - Sugar",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 59,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7427),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7428),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Maroon 5 Ft. Wiz Khalifa.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Maroon 5 Ft. Wiz Khalifa",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 60,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7429),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7430),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\MHW ICEBORNE Safi Jiiva Battle Theme OST.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "MHW ICEBORNE Safi Jiiva Battle Theme OST",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 61,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7431),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7431),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\MIC Drop (Steve Aoki Remix) Official MV.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "MIC Drop (Steve Aoki Remix) Official MV",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 62,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7432),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7433),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Migos - Get Right Witcha (G-REX X TOP $HELF Remix).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Migos - Get Right Witcha (G-REX X TOP $HELF Remix)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 63,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7434),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7434),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\MODEL DLMMD Ai no Uta 愛の詩YYB Miku Futura.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "MODEL DLMMD Ai no Uta 愛の詩YYB Miku Futura",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 64,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7435),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7436),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Moonlight.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Moonlight",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 65,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7437),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7437),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Most Outstanding OST of All Time Rokudenashi Majutsu Koushi to Akashic Records.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Most Outstanding OST of All Time Rokudenashi Majutsu Koushi to Akashic Records",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 66,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7461),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7461),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Mrs. GREEN APPLE - インフェルノInferno.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Mrs. GREEN APPLE - インフェルノInferno",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 67,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7463),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7463),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\My Hero Academia OST - You Say Run + Jet Set Run (You Say Run v2).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "My Hero Academia OST - You Say Run + Jet Set Run (You Say Run v2)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 68,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7464),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7465),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\My Hero Academia Season 4 OST - Deku vs. Overhaul (Edited Version).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "My Hero Academia Season 4 OST - Deku vs. Overhaul (Edited Version)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 69,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7466),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7466),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Namirin  - Renai Circulation「恋愛サーキュレーショ.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Namirin  - Renai Circulation「恋愛サーキュレーショ",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 70,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7467),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7468),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Nanatsu no Taizai S2 - Escanor Theme (Rearrangement).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Nanatsu no Taizai S2 - Escanor Theme (Rearrangement)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 71,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7469),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7469),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\NEFFEX - Fight Back.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "NEFFEX - Fight Back",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 72,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7470),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7470),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\NEFFEX - Myself.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "NEFFEX - Myself",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 73,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7472),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7472),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Neon Dreams - High (feat. Waka Flocka Flame & Dylan Guthro).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Neon Dreams - High (feat. Waka Flocka Flame & Dylan Guthro)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 74,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7473),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7474),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Nightcore - Control.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Nightcore - Control",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 75,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7475),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7475),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Nightcore - Rockefeller Street.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Nightcore - Rockefeller Street",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 76,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7476),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7477),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\No Game No Life Opening Full.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "No Game No Life Opening Full",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 77,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7478),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7478),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Not Today Official MV.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Not Today Official MV",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 78,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7480),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7480),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Nto - Trauma (Worakls Remix).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Nto - Trauma (Worakls Remix)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 79,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7481),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7481),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Owari no Seraph OST - 1hundredknight M [終わりのセラフ].mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Owari no Seraph OST - 1hundredknight M [終わりのセラフ]",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 80,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7483),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7483),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Portals Theme Doom Eternal Ancient Gods Part 2 Soundtrack.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Portals Theme Doom Eternal Ancient Gods Part 2 Soundtrack",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 81,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7484),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7484),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Post Malone - Better Now.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Post Malone - Better Now",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 82,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7486),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7486),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Post Malone_ 21 Savage - Rockstar.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Post Malone_ 21 Savage - Rockstar",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 83,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7487),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7488),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Reverse feat. G-Eazy.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Reverse feat. G-Eazy",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 84,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7489),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7489),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Rich The Kid - Plug Walk (Audio).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Rich The Kid - Plug Walk (Audio)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 85,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7490),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7491),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Right Now.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Right Now",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 86,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7492),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7492),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\RISE (ft. The Glitch Mob, Mako, and The Word Alive) Worlds 2018 - League of Legends.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "RISE (ft. The Glitch Mob, Mako, and The Word Alive) Worlds 2018 - League of Legends",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 87,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7494),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7494),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Saber Alter vs Berserker Theme - Fatestay Night Movie Heaven's Feel II. Lost Butterfly OST.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Saber Alter vs Berserker Theme - Fatestay Night Movie Heaven's Feel II. Lost Butterfly OST",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 88,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7495),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7496),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\SAD!.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "SAD!",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 89,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7497),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7497),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Saijaku Muhai no Bahamut  - Saijaku Muhai OST.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Saijaku Muhai no Bahamut  - Saijaku Muhai OST",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 90,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7498),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7499),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Saijaku Muhai no Bahamut Opening Hiryuu no Kishi - Extended(Sound only).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Saijaku Muhai no Bahamut Opening Hiryuu no Kishi - Extended(Sound only)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 91,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7500),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7500),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Sakura - 落ち着いて冷やす.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Sakura - 落ち着いて冷やす",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 92,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7501),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7502),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\SAMAHTA - graffiti (feat. Melody Federer).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "SAMAHTA - graffiti (feat. Melody Federer)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 93,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7503),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7503),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Seishun Buta Yarou wa Bunny Girl Senpai no Yume wo Minai ED [Part Section]Fukashigi no Carte.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Seishun Buta Yarou wa Bunny Girl Senpai no Yume wo Minai ED [Part Section]Fukashigi no Carte",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 94,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7504),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7505),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Shawn Mendes - Mercy.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Shawn Mendes - Mercy",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 95,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7506),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7506),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Shawn Mendes - Stitches.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Shawn Mendes - Stitches",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 96,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7507),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7507),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Shawn Mendes - Theres Nothing Holdin Me Back.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Shawn Mendes - Theres Nothing Holdin Me Back",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 97,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7509),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7509),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Shawn Mendes - Treat You Better.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Shawn Mendes - Treat You Better",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 98,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7510),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7510),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Sheck Wes - Mo Bamba.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Sheck Wes - Mo Bamba",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 99,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7512),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7512),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Shoko Makinohara ED Solo FULL 牧之原 翔子 ソロ - 不可思議のカルテ Fukashigi no Carte.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Shoko Makinohara ED Solo FULL 牧之原 翔子 ソロ - 不可思議のカルテ Fukashigi no Carte",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 100,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7513),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7514),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Sickick - Infected.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Sickick - Infected",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 101,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7515),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7515),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Sickick - Mind Games.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Sickick - Mind Games",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 102,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7516),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7517),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\SickickMusic - Lost My Way.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "SickickMusic - Lost My Way",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 103,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7518),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7518),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Skan & Krale - No Glory (feat. M.I.M.E & Drama B).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Skan & Krale - No Glory (feat. M.I.M.E & Drama B)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 104,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7519),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7520),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\SKI MASK THE SLUMP GOD x LIL PUMP - WHERE'S THE BLOW.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "SKI MASK THE SLUMP GOD x LIL PUMP - WHERE'S THE BLOW",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 105,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7556),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7557),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\SKRILLEX - Bangarang feat. Sirah.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "SKRILLEX - Bangarang feat. Sirah",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 106,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7558),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7558),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Slim Jesus - Drill Time (T-Mass & Wildfellaz Remix).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Slim Jesus - Drill Time (T-Mass & Wildfellaz Remix)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 107,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7560),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7560),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Soredemo sekai wa utsukushii - Beautiful rain full ver..mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Soredemo sekai wa utsukushii - Beautiful rain full ver.",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 108,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7561),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7562),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Soredemo sekai wa Utsukushii - [Beautiful World - Koike Joanna].mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Soredemo sekai wa Utsukushii - [Beautiful World - Koike Joanna]",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 109,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7563),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7563),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\STéLOUSE - Sociopath (feat. Bryce Fox).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "STéLOUSE - Sociopath (feat. Bryce Fox)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 110,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7564),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7565),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Sufian Suhaimi - Di Matamu.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Sufian Suhaimi - Di Matamu",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 111,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7566),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7566),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Sword Art Online Alicization - War of Underworld Ending FullLiSA - unlasting.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Sword Art Online Alicization - War of Underworld Ending FullLiSA - unlasting",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 112,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7567),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7568),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Sword Art Online Alicization Opening FullLiSA - ADAMASENG Sub.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Sword Art Online Alicization Opening FullLiSA - ADAMASENG Sub",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 113,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7569),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7569),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Tengen Toppa Gurren Lagann OST Sorairo Days FULL VERSION.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Tengen Toppa Gurren Lagann OST Sorairo Days FULL VERSION",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 114,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7570),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7571),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\TETRA-FANG - Supernova.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "TETRA-FANG - Supernova",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 115,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7572),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7572),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\The Mirza - Lelah Mengalah.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "The Mirza - Lelah Mengalah",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 116,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7573),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7574),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\The Soul of Wind -  🗻 The Mountains 🗻.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "The Soul of Wind -  🗻 The Mountains 🗻",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 117,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7575),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7575),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\TheFatRat - Fly Away feat. Anjulie.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "TheFatRat - Fly Away feat. Anjulie",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 118,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7576),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7576),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\TheFatRat - Monody (feat. Laura Brehm).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "TheFatRat - Monody (feat. Laura Brehm)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 119,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7578),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7578),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\TheFatRat - Time Lapse.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "TheFatRat - Time Lapse",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 120,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7579),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7579),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\TheFatRat - Unity.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "TheFatRat - Unity",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 121,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7580),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7581),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\TIIMO - Bangin In the Club.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "TIIMO - Bangin In the Club",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 122,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7582),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7582),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Tokyo Ghoul - Glassy Sky [東京喰種 -トーキョーグール-].mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Tokyo Ghoul - Glassy Sky [東京喰種 -トーキョーグール-]",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 123,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7583),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7584),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Tokyo Ghoul - Unravel (Marco B. Remix).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Tokyo Ghoul - Unravel (Marco B. Remix)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 124,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7585),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7585),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Tokyo Ghoul - Unravel (OP Piano) .mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Tokyo Ghoul - Unravel (OP Piano) ",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 125,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7586),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7587),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Tokyo Ghoul - Unravel 2.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Tokyo Ghoul - Unravel 2",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 126,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7588),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7588),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Tokyo Ghoul - Unravel.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Tokyo Ghoul - Unravel",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 127,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7590),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7590),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Tokyo Machine - FLY [Monstercat Release].mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Tokyo Machine - FLY [Monstercat Release]",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 128,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7591),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7591),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Trapcity - Dead To Me (feat. Lox Chatterbox).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Trapcity - Dead To Me (feat. Lox Chatterbox)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 129,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7592),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7593),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Trapcity - Samurai☯ Lofi.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Trapcity - Samurai☯ Lofi",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 130,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7595),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7596),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Trapcity - Trap Queen (Crankdat Remix).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Trapcity - Trap Queen (Crankdat Remix)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 131,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7597),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7597),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Travis Scott - SICKO MODE.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Travis Scott - SICKO MODE",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 132,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7598),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7599),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Two Feet - I Feel Like Im Drowning.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Two Feet - I Feel Like Im Drowning",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 133,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7600),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7600),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Unlike Pluto ft. Mike Taylor - Everything Black.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Unlike Pluto ft. Mike Taylor - Everything Black",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 134,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7614),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7614),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Wishing Lyrics Rem(minase inori) ReZero.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Wishing Lyrics Rem(minase inori) ReZero",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 135,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7616),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7616),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\XXXTENTACION - BAD!.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "XXXTENTACION - BAD!",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 136,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7617),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7618),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Yama-春を告げる(Haru wo tsugeru) [KanjiRomajiEnglish Lyrics].mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Yama-春を告げる(Haru wo tsugeru) [KanjiRomajiEnglish Lyrics]",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 137,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7619),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7619),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Yasuha - Flyday Chinatown.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Yasuha - Flyday Chinatown",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 138,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7620),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7621),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\YOASOBI 夜に駆ける English & Romanji Lyrics.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "YOASOBI 夜に駆ける English & Romanji Lyrics",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 139,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7622),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7622),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\YOASOBIハルジオンOfficial Music Video.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "YOASOBIハルジオンOfficial Music Video",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 140,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7623),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7624),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Yuna - Longing.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Yuna - Longing",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 141,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7625),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7625),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\Yuna - Smile for you .mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Yuna - Smile for you ",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 142,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7626),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7627),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\タイニーリトルアシアンタム.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "タイニーリトルアシアンタム",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 143,
                            AlbumID = 0,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateCreated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7628),
                            DateUpdated = new DateTime(2025, 1, 28, 16, 30, 49, 197, DateTimeKind.Local).AddTicks(7628),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            FilePath = "C:\\Users\\ghost\\source\\repos\\Pancake_Final_Group09\\Pancake_Final\\wwwroot\\music\\レペゼン地球66thシングルO2MEN.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "レペゼン地球66thシングルO2MEN",
                            UpdateBy = "Seeder"
                        });
                });

            modelBuilder.Entity("Pancake_Final.Domain.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubId")
                        .HasColumnType("int");

                    b.Property<string>("SubPlans")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubStatus")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Subscription");
                });

            modelBuilder.Entity("Pancake_Final.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayListID")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Pancake_Final.Data.Pancake_FinalUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Pancake_Final.Data.Pancake_FinalUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pancake_Final.Data.Pancake_FinalUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Pancake_Final.Data.Pancake_FinalUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pancake_Final.Domain.Song", b =>
                {
                    b.HasOne("Pancake_Final.Domain.Artists", null)
                        .WithMany("Songs")
                        .HasForeignKey("ArtistsArtistID");

                    b.HasOne("Pancake_Final.Domain.Playlist", null)
                        .WithMany("Songs")
                        .HasForeignKey("PlaylistId");
                });

            modelBuilder.Entity("Pancake_Final.Domain.Artists", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Pancake_Final.Domain.Playlist", b =>
                {
                    b.Navigation("Songs");
                });
#pragma warning restore 612, 618
        }
    }
}
