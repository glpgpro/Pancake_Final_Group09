// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pancake_Final.Data;

#nullable disable

namespace Pancake_Final.Migrations
{
    [DbContext(typeof(Pancake_FinalContext))]
    partial class Pancake_FinalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Pancake_Final.Data.Pancake_FinalUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "3781efa7-66dc-47f0-860f-e506d04102e4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "67c1e70b-51d3-43ff-b2fd-675527bc2880",
                            Email = "admin@localhost.com",
                            EmailConfirmed = true,
                            FirstName = "Admin",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@LOCALHOST.COM",
                            NormalizedUserName = "ADMIN@LOCALHOST.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEFUtHSiO5dGsHzNtcv2yjPhVSVplJNO7Nn67RMkmN33byaMho47qig/ZS1s4Vfn2Rg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a42f6cfa-9902-4351-9ac6-788680c4e05d",
                            SubStatus = "Admin",
                            TwoFactorEnabled = false,
                            UserName = "admin@localhost.com"
                        },
                        new
                        {
                            Id = "30f01c03-6b69-4bf0-95ba-72ac6e7e4773",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4c079f25-495c-4215-b055-14bdb35954bc",
                            Email = "ghostreaper740@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Test",
                            LastName = "user",
                            LockoutEnabled = false,
                            NormalizedEmail = "GHOSTREAPER740@GMAIL.COM",
                            NormalizedUserName = "GHOSTREAPER740@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAELoWIcfzVd5PrNz5JyPCFxyTK9wGCg+lmANhxL/+fpNaLrByzCz/OIh7zmI1UH28OQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "224a404f-87d9-4c96-9494-4fd06dc8933b",
                            SubStatus = "free",
                            TwoFactorEnabled = false,
                            UserName = "Amsul Shamry"
                        });
                });

            modelBuilder.Entity("Pancake_Final.Domain.Album", b =>
                {
                    b.Property<int>("AlbumID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlbumID"));

                    b.Property<byte>("AlbumImage")
                        .HasColumnType("tinyint");

                    b.Property<int>("ArtistID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("GenID")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AlbumID");

                    b.ToTable("Album");
                });

            modelBuilder.Entity("Pancake_Final.Domain.Artists", b =>
                {
                    b.Property<int>("ArtistID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtistID"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.HasKey("ArtistID");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("Pancake_Final.Domain.Genre", b =>
                {
                    b.Property<int>("GenreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreID");

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            GenreID = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 2, 8, 16, 50, 47, 702, DateTimeKind.Utc).AddTicks(4649),
                            DateUpdated = new DateTime(2025, 2, 8, 16, 50, 47, 702, DateTimeKind.Utc).AddTicks(4656),
                            GenreName = "Liked Songs",
                            Id = 1,
                            UpdateBy = "System"
                        });
                });

            modelBuilder.Entity("Pancake_Final.Domain.ListeningHistory", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryId"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatePlayed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SongId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("HistoryId");

                    b.ToTable("ListeningHistory");
                });

            modelBuilder.Entity("Pancake_Final.Domain.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PayId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethod");
                });

            modelBuilder.Entity("Pancake_Final.Domain.Playlist", b =>
                {
                    b.Property<int>("PlaylistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlaylistId"));

                    b.Property<string>("CoverImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("GenreID")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("NewGenreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaylistName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PlaylistId");

                    b.HasIndex("GenreID");

                    b.ToTable("Playlist");
                });

            modelBuilder.Entity("Pancake_Final.Domain.Song", b =>
                {
                    b.Property<int?>("SongId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("SongId"));

                    b.Property<int?>("AlbumID")
                        .HasColumnType("int");

                    b.Property<int?>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int?>("ArtistsArtistID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenID")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("LikedS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlaylistId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SongId");

                    b.HasIndex("ArtistsArtistID");

                    b.HasIndex("PlaylistId");

                    b.ToTable("Song");

                    b.HasData(
                        new
                        {
                            SongId = 1,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 506, DateTimeKind.Local).AddTicks(1859),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 506, DateTimeKind.Local).AddTicks(1873),
                            Duration = new TimeSpan(1877739166),
                            FilePath = "/music/Don Toliver - No Pole.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Don Toliver - No Pole",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 2,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 506, DateTimeKind.Local).AddTicks(3397),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 506, DateTimeKind.Local).AddTicks(3398),
                            Duration = new TimeSpan(1297645833),
                            FilePath = "/music/Genshin Impact丨Zhongli Theme musicListenerOST原神钟离听书人.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Genshin Impact丨Zhongli Theme musicListenerOST原神钟离听书人",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 3,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 506, DateTimeKind.Local).AddTicks(5757),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 506, DateTimeKind.Local).AddTicks(5759),
                            Duration = new TimeSpan(2111185000),
                            FilePath = "/music/Goblin Slayer - Rightfully _ Mili [Full].mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Goblin Slayer - Rightfully _ Mili [Full]",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 4,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 506, DateTimeKind.Local).AddTicks(6999),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 506, DateTimeKind.Local).AddTicks(7000),
                            Duration = new TimeSpan(1873305000),
                            FilePath = "/music/Goblins from Mars  - Put Your Love In Dreamz.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Goblins from Mars  - Put Your Love In Dreamz",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 5,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 507, DateTimeKind.Local).AddTicks(1195),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 507, DateTimeKind.Local).AddTicks(1205),
                            Duration = new TimeSpan(1812530833),
                            FilePath = "/music/Goblins from Mars - Cold Blooded Love (ft. Krista Marina).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Goblins from Mars - Cold Blooded Love (ft. Krista Marina)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 6,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 507, DateTimeKind.Local).AddTicks(3423),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 507, DateTimeKind.Local).AddTicks(3434),
                            Duration = new TimeSpan(2091100833),
                            FilePath = "/music/Goblins from Mars - Heart Afire When The Bassjumps.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Goblins from Mars - Heart Afire When The Bassjumps",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 7,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 508, DateTimeKind.Local).AddTicks(1299),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 508, DateTimeKind.Local).AddTicks(1312),
                            Duration = new TimeSpan(2760920833),
                            FilePath = "/music/Gotoubun no Hanayome Ending Full SignCandy Flavor - Aya Uchida Lyrics [CC].mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Gotoubun no Hanayome Ending Full SignCandy Flavor - Aya Uchida Lyrics [CC]",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 8,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 508, DateTimeKind.Local).AddTicks(5499),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 508, DateTimeKind.Local).AddTicks(5508),
                            Duration = new TimeSpan(2822477500),
                            FilePath = "/music/Grancrest Senki Opening 2 Full _ Rin - ASCA Lyrics [CC].mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Grancrest Senki Opening 2 Full _ Rin - ASCA Lyrics [CC]",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 9,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 508, DateTimeKind.Local).AddTicks(9999),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 509, DateTimeKind.Local).AddTicks(8),
                            Duration = new TimeSpan(2235863333),
                            FilePath = "/music/grandson - Despicable.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "grandson - Despicable",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 10,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 509, DateTimeKind.Local).AddTicks(2320),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 509, DateTimeKind.Local).AddTicks(2322),
                            Duration = new TimeSpan(1464057500),
                            FilePath = "/music/Greatest Battle Music Of All Times Saijaku Muhai.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Greatest Battle Music Of All Times Saijaku Muhai",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 11,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 509, DateTimeKind.Local).AddTicks(4585),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 509, DateTimeKind.Local).AddTicks(4592),
                            Duration = new TimeSpan(916307500),
                            FilePath = "/music/Gundam - OP1 HD.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Gundam - OP1 HD",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 12,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 509, DateTimeKind.Local).AddTicks(6703),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 509, DateTimeKind.Local).AddTicks(6705),
                            Duration = new TimeSpan(0, 0, 3, 57, 567),
                            FilePath = "/music/Gundam - Seed.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Gundam - Seed",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 13,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 509, DateTimeKind.Local).AddTicks(8127),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 509, DateTimeKind.Local).AddTicks(8129),
                            Duration = new TimeSpan(2539995000),
                            FilePath = "/music/Hans Zimmer - Flight.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Hans Zimmer - Flight",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 14,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 509, DateTimeKind.Local).AddTicks(9575),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 509, DateTimeKind.Local).AddTicks(9577),
                            Duration = new TimeSpan(5451416666),
                            FilePath = "/music/Hiroyuki Sawano ashes Suite [vocal gemie] Epic Battle Music.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Hiroyuki Sawano ashes Suite [vocal gemie] Epic Battle Music",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 15,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 510, DateTimeKind.Local).AddTicks(1042),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 510, DateTimeKind.Local).AddTicks(1044),
                            Duration = new TimeSpan(0, 0, 8, 25, 182),
                            FilePath = "/music/Hiroyuki Sawano Impure King Suite Epic Battle Music.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Hiroyuki Sawano Impure King Suite Epic Battle Music",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 16,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 510, DateTimeKind.Local).AddTicks(2521),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 510, DateTimeKind.Local).AddTicks(2522),
                            Duration = new TimeSpan(1010207500),
                            FilePath = "/music/HOPE.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "HOPE",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 17,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 510, DateTimeKind.Local).AddTicks(4213),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 510, DateTimeKind.Local).AddTicks(4218),
                            Duration = new TimeSpan(2029805000),
                            FilePath = "/music/HOTD - Pentakill .mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "HOTD - Pentakill ",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 18,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 510, DateTimeKind.Local).AddTicks(6002),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 510, DateTimeKind.Local).AddTicks(6004),
                            Duration = new TimeSpan(1892867500),
                            FilePath = "/music/i feel like i did too much Don Toliver - No Idea (Lyrics).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "i feel like i did too much Don Toliver - No Idea (Lyrics)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 19,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 510, DateTimeKind.Local).AddTicks(8485),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 510, DateTimeKind.Local).AddTicks(8491),
                            Duration = new TimeSpan(2197520833),
                            FilePath = "/music/I NEED U (Official MV).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "I NEED U (Official MV)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 20,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 511, DateTimeKind.Local).AddTicks(288),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 511, DateTimeKind.Local).AddTicks(289),
                            Duration = new TimeSpan(2315417500),
                            FilePath = "/music/IDOL Official MV.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "IDOL Official MV",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 21,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 511, DateTimeKind.Local).AddTicks(2417),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 511, DateTimeKind.Local).AddTicks(2419),
                            Duration = new TimeSpan(0, 0, 2, 43, 73),
                            FilePath = "/music/Imagine Dragons - Believer (Romy Wave Cover) [Not So Good Remix].mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Imagine Dragons - Believer (Romy Wave Cover) [Not So Good Remix]",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 22,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 511, DateTimeKind.Local).AddTicks(4061),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 511, DateTimeKind.Local).AddTicks(4071),
                            Duration = new TimeSpan(2166742500),
                            FilePath = "/music/Imagine Dragons - Believer.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Imagine Dragons - Believer",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 23,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 511, DateTimeKind.Local).AddTicks(6552),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 511, DateTimeKind.Local).AddTicks(6554),
                            Duration = new TimeSpan(0, 0, 5, 23, 329),
                            FilePath = "/music/ISLAND OST - Island Opening Full「Eien no Hitotsu」.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "ISLAND OST - Island Opening Full「Eien no Hitotsu」",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 24,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 511, DateTimeKind.Local).AddTicks(8303),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 511, DateTimeKind.Local).AddTicks(8304),
                            Duration = new TimeSpan(3018363333),
                            FilePath = "/music/ISLAND OST - Lasting Memories FULL.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "ISLAND OST - Lasting Memories FULL",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 25,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 512, DateTimeKind.Local).AddTicks(84),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 512, DateTimeKind.Local).AddTicks(88),
                            Duration = new TimeSpan(1347204166),
                            FilePath = "/music/J.Fla  - Havana.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "J.Fla  - Havana",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 26,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 512, DateTimeKind.Local).AddTicks(1924),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 512, DateTimeKind.Local).AddTicks(1925),
                            Duration = new TimeSpan(0, 0, 4, 11, 652),
                            FilePath = "/music/Jacob Lee - Demons.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Jacob Lee - Demons",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 27,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 512, DateTimeKind.Local).AddTicks(3231),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 512, DateTimeKind.Local).AddTicks(3233),
                            Duration = new TimeSpan(0, 0, 3, 25, 641),
                            FilePath = "/music/Jaden - GOKU.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Jaden - GOKU",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 28,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 512, DateTimeKind.Local).AddTicks(5148),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 512, DateTimeKind.Local).AddTicks(5153),
                            Duration = new TimeSpan(0, 0, 2, 50, 898),
                            FilePath = "/music/Justin Stone - Lungs (Prod. Alex Collins).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Justin Stone - Lungs (Prod. Alex Collins)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 29,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 512, DateTimeKind.Local).AddTicks(7159),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 512, DateTimeKind.Local).AddTicks(7161),
                            Duration = new TimeSpan(2634677500),
                            FilePath = "/music/Kaguya-Sama - Love is war (feat. Masayuki Suzuki) .mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Kaguya-Sama - Love is war (feat. Masayuki Suzuki) ",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 30,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 512, DateTimeKind.Local).AddTicks(8799),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 512, DateTimeKind.Local).AddTicks(8802),
                            Duration = new TimeSpan(2541299166),
                            FilePath = "/music/Kaguya-sama Love is War Season 2 - Opening FullDADDY! DADDY! DO!by Masayuki Suzuki.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Kaguya-sama Love is War Season 2 - Opening FullDADDY! DADDY! DO!by Masayuki Suzuki",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 31,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 512, DateTimeKind.Local).AddTicks(9929),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 512, DateTimeKind.Local).AddTicks(9930),
                            Duration = new TimeSpan(2771615000),
                            FilePath = "/music/Kakusei [Awakening].mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Kakusei [Awakening]",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 32,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 513, DateTimeKind.Local).AddTicks(1476),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 513, DateTimeKind.Local).AddTicks(1477),
                            Duration = new TimeSpan(1819312500),
                            FilePath = "/music/Kamikaze Feat. Lox Chatterbox.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Kamikaze Feat. Lox Chatterbox",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 33,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 513, DateTimeKind.Local).AddTicks(2626),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 513, DateTimeKind.Local).AddTicks(2627),
                            Duration = new TimeSpan(2651631666),
                            FilePath = "/music/KANA-BOON - Silhouette.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "KANA-BOON - Silhouette",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 34,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 513, DateTimeKind.Local).AddTicks(3853),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 513, DateTimeKind.Local).AddTicks(3858),
                            Duration = new TimeSpan(2030065833),
                            FilePath = "/music/KDA - POPSTARS (ft. Madison Beer, (G)I-DLE, Jaira Burns) Music Video - League of Legends.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "KDA - POPSTARS (ft. Madison Beer, (G)I-DLE, Jaira Burns) Music Video - League of Legends",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 35,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 513, DateTimeKind.Local).AddTicks(5369),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 513, DateTimeKind.Local).AddTicks(5371),
                            Duration = new TimeSpan(2423924166),
                            FilePath = "/music/Kenshi Yonezu (米津玄師) - Peace Sign (KanRomEng Lyrics)Boku no Hero Academia Season 2 OP.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Kenshi Yonezu (米津玄師) - Peace Sign (KanRomEng Lyrics)Boku no Hero Academia Season 2 OP",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 36,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 513, DateTimeKind.Local).AddTicks(6615),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 513, DateTimeKind.Local).AddTicks(6617),
                            Duration = new TimeSpan(1273127500),
                            FilePath = "/music/khai dreams - sunkissed.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "khai dreams - sunkissed",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 37,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 513, DateTimeKind.Local).AddTicks(7764),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 513, DateTimeKind.Local).AddTicks(7765),
                            Duration = new TimeSpan(2328198333),
                            FilePath = "/music/Kibou No Uta Lyrics.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Kibou No Uta Lyrics",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 38,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 513, DateTimeKind.Local).AddTicks(9470),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 513, DateTimeKind.Local).AddTicks(9471),
                            Duration = new TimeSpan(2271597500),
                            FilePath = "/music/Krewella - Calm Down (SKAN Remix).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Krewella - Calm Down (SKAN Remix)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 39,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 514, DateTimeKind.Local).AddTicks(1062),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 514, DateTimeKind.Local).AddTicks(1066),
                            Duration = new TimeSpan(2126574166),
                            FilePath = "/music/KSI & Randolph - Champagne (Official Audio).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "KSI & Randolph - Champagne (Official Audio)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 40,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 514, DateTimeKind.Local).AddTicks(4218),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 514, DateTimeKind.Local).AddTicks(4225),
                            Duration = new TimeSpan(2101273333),
                            FilePath = "/music/KUURO - Afraid of the Dark (feat. Sophiya) .mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "KUURO - Afraid of the Dark (feat. Sophiya) ",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 41,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 514, DateTimeKind.Local).AddTicks(6008),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 514, DateTimeKind.Local).AddTicks(6009),
                            Duration = new TimeSpan(1921298333),
                            FilePath = "/music/KUURO - What U Wanna Do.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "KUURO - What U Wanna Do",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 42,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 514, DateTimeKind.Local).AddTicks(8008),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 514, DateTimeKind.Local).AddTicks(8008),
                            Duration = new TimeSpan(0, 0, 3, 19, 381),
                            FilePath = "/music/LAYTO - Little Poor Me.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "LAYTO - Little Poor Me",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 43,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 514, DateTimeKind.Local).AddTicks(9337),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 514, DateTimeKind.Local).AddTicks(9338),
                            Duration = new TimeSpan(2351934166),
                            FilePath = "/music/Legends Never Die (ft. Against The Current) [OFFICIAL AUDIO] Worlds 2017 - League of Legends.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Legends Never Die (ft. Against The Current) [OFFICIAL AUDIO] Worlds 2017 - League of Legends",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 44,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 515, DateTimeKind.Local).AddTicks(1273),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 515, DateTimeKind.Local).AddTicks(1274),
                            Duration = new TimeSpan(1406674166),
                            FilePath = "/music/Leonhart - Grancrest Senki OST - Hope.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Leonhart - Grancrest Senki OST - Hope",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 45,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 515, DateTimeKind.Local).AddTicks(3585),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 515, DateTimeKind.Local).AddTicks(3587),
                            Duration = new TimeSpan(3110176666),
                            FilePath = "/music/Leonhart - Grancrest Senki OST.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Leonhart - Grancrest Senki OST",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 46,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 515, DateTimeKind.Local).AddTicks(4827),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 515, DateTimeKind.Local).AddTicks(4828),
                            Duration = new TimeSpan(1668811666),
                            FilePath = "/music/Liam Ferrari - I Like The Way.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Liam Ferrari - I Like The Way",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 47,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 515, DateTimeKind.Local).AddTicks(6836),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 515, DateTimeKind.Local).AddTicks(6837),
                            Duration = new TimeSpan(1570999166),
                            FilePath = "/music/Lil Nas X Billy Ray Cyrus - Old Town Road (Remix).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Lil Nas X Billy Ray Cyrus - Old Town Road (Remix)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 48,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 515, DateTimeKind.Local).AddTicks(9098),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 515, DateTimeKind.Local).AddTicks(9104),
                            Duration = new TimeSpan(0, 0, 2, 44, 638),
                            FilePath = "/music/LIL SKIES - Boss Up.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "LIL SKIES - Boss Up",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 49,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 516, DateTimeKind.Local).AddTicks(757),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 516, DateTimeKind.Local).AddTicks(761),
                            Duration = new TimeSpan(1561087499),
                            FilePath = "/music/LIL SKIES - Lust.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "LIL SKIES - Lust",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 50,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 516, DateTimeKind.Local).AddTicks(2810),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 516, DateTimeKind.Local).AddTicks(2812),
                            Duration = new TimeSpan(1803140833),
                            FilePath = "/music/Lil Uzi Vert - XO Tour Llif3 .mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Lil Uzi Vert - XO Tour Llif3 ",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 51,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 516, DateTimeKind.Local).AddTicks(4233),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 516, DateTimeKind.Local).AddTicks(4234),
                            Duration = new TimeSpan(2002939166),
                            FilePath = "/music/Lilianna Wilde - Grind Me Down (Jawster Remix).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Lilianna Wilde - Grind Me Down (Jawster Remix)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 52,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 516, DateTimeKind.Local).AddTicks(5497),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 516, DateTimeKind.Local).AddTicks(5500),
                            Duration = new TimeSpan(0, 0, 4, 44, 204),
                            FilePath = "/music/LiSA - Catch the Moment.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "LiSA - Catch the Moment",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 53,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 516, DateTimeKind.Local).AddTicks(6627),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 516, DateTimeKind.Local).AddTicks(6628),
                            Duration = new TimeSpan(2477916666),
                            FilePath = "/music/LiSA - Crossing Field.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "LiSA - Crossing Field",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 54,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 516, DateTimeKind.Local).AddTicks(7915),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 516, DateTimeKind.Local).AddTicks(7916),
                            Duration = new TimeSpan(1852177500),
                            FilePath = "/music/Look Alive [BASS BOOSTED].mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Look Alive [BASS BOOSTED]",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 55,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 516, DateTimeKind.Local).AddTicks(9517),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 516, DateTimeKind.Local).AddTicks(9523),
                            Duration = new TimeSpan(2581989166),
                            FilePath = "/music/Lyrics Owari no Seraph OST - 108.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Lyrics Owari no Seraph OST - 108",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 56,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 517, DateTimeKind.Local).AddTicks(1101),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 517, DateTimeKind.Local).AddTicks(1102),
                            Duration = new TimeSpan(2420794166),
                            FilePath = "/music/MADKID - RISE Tate no Yuusha no Nariagari Full [OpeningApertura] HQ.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "MADKID - RISE Tate no Yuusha no Nariagari Full [OpeningApertura] HQ",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 57,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 517, DateTimeKind.Local).AddTicks(2845),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 517, DateTimeKind.Local).AddTicks(2850),
                            Duration = new TimeSpan(2044411666),
                            FilePath = "/music/Magnolia.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Magnolia",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 58,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 517, DateTimeKind.Local).AddTicks(4071),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 517, DateTimeKind.Local).AddTicks(4073),
                            Duration = new TimeSpan(2660760833),
                            FilePath = "/music/Maroon 5 - Sugar.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Maroon 5 - Sugar",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 59,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 517, DateTimeKind.Local).AddTicks(5968),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 517, DateTimeKind.Local).AddTicks(5972),
                            Duration = new TimeSpan(2326633333),
                            FilePath = "/music/Maroon 5 Ft. Wiz Khalifa.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Maroon 5 Ft. Wiz Khalifa",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 60,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 517, DateTimeKind.Local).AddTicks(7487),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 517, DateTimeKind.Local).AddTicks(7488),
                            Duration = new TimeSpan(3914847500),
                            FilePath = "/music/MHW ICEBORNE Safi Jiiva Battle Theme OST.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "MHW ICEBORNE Safi Jiiva Battle Theme OST",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 61,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 517, DateTimeKind.Local).AddTicks(9393),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 517, DateTimeKind.Local).AddTicks(9394),
                            Duration = new TimeSpan(2741097500),
                            FilePath = "/music/MIC Drop (Steve Aoki Remix) Official MV.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "MIC Drop (Steve Aoki Remix) Official MV",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 62,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 518, DateTimeKind.Local).AddTicks(633),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 518, DateTimeKind.Local).AddTicks(635),
                            Duration = new TimeSpan(2436444166),
                            FilePath = "/music/Migos - Get Right Witcha (G-REX X TOP $HELF Remix).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Migos - Get Right Witcha (G-REX X TOP $HELF Remix)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 63,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 518, DateTimeKind.Local).AddTicks(1938),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 518, DateTimeKind.Local).AddTicks(1939),
                            Duration = new TimeSpan(2220995833),
                            FilePath = "/music/MODEL DLMMD Ai no Uta 愛の詩YYB Miku Futura.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "MODEL DLMMD Ai no Uta 愛の詩YYB Miku Futura",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 64,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 518, DateTimeKind.Local).AddTicks(3651),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 518, DateTimeKind.Local).AddTicks(3656),
                            Duration = new TimeSpan(1660986666),
                            FilePath = "/music/Moonlight.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Moonlight",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 65,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 518, DateTimeKind.Local).AddTicks(5333),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 518, DateTimeKind.Local).AddTicks(5338),
                            Duration = new TimeSpan(2153700833),
                            FilePath = "/music/Most Outstanding OST of All Time Rokudenashi Majutsu Koushi to Akashic Records.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Most Outstanding OST of All Time Rokudenashi Majutsu Koushi to Akashic Records",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 66,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 518, DateTimeKind.Local).AddTicks(6765),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 518, DateTimeKind.Local).AddTicks(6766),
                            Duration = new TimeSpan(2213692500),
                            FilePath = "/music/Mrs. GREEN APPLE - インフェルノInferno.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Mrs. GREEN APPLE - インフェルノInferno",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 67,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 518, DateTimeKind.Local).AddTicks(7936),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 518, DateTimeKind.Local).AddTicks(7937),
                            Duration = new TimeSpan(4549455000),
                            FilePath = "/music/My Hero Academia OST - You Say Run + Jet Set Run (You Say Run v2).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "My Hero Academia OST - You Say Run + Jet Set Run (You Say Run v2)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 68,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 518, DateTimeKind.Local).AddTicks(9055),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 518, DateTimeKind.Local).AddTicks(9056),
                            Duration = new TimeSpan(1672463333),
                            FilePath = "/music/My Hero Academia Season 4 OST - Deku vs. Overhaul (Edited Version).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "My Hero Academia Season 4 OST - Deku vs. Overhaul (Edited Version)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 69,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 519, DateTimeKind.Local).AddTicks(794),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 519, DateTimeKind.Local).AddTicks(796),
                            Duration = new TimeSpan(2548863333),
                            FilePath = "/music/Namirin  - Renai Circulation「恋愛サーキュレーショ.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Namirin  - Renai Circulation「恋愛サーキュレーショ",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 70,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 519, DateTimeKind.Local).AddTicks(2147),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 519, DateTimeKind.Local).AddTicks(2151),
                            Duration = new TimeSpan(2596074166),
                            FilePath = "/music/Nanatsu no Taizai S2 - Escanor Theme (Rearrangement).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Nanatsu no Taizai S2 - Escanor Theme (Rearrangement)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 71,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 519, DateTimeKind.Local).AddTicks(5199),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 519, DateTimeKind.Local).AddTicks(5205),
                            Duration = new TimeSpan(2005025833),
                            FilePath = "/music/NEFFEX - Fight Back.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "NEFFEX - Fight Back",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 72,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 519, DateTimeKind.Local).AddTicks(6833),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 519, DateTimeKind.Local).AddTicks(6834),
                            Duration = new TimeSpan(1951815833),
                            FilePath = "/music/NEFFEX - Myself.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "NEFFEX - Myself",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 73,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 519, DateTimeKind.Local).AddTicks(8304),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 519, DateTimeKind.Local).AddTicks(8305),
                            Duration = new TimeSpan(2091622500),
                            FilePath = "/music/Neon Dreams - High (feat. Waka Flocka Flame & Dylan Guthro).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Neon Dreams - High (feat. Waka Flocka Flame & Dylan Guthro)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 74,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 520, DateTimeKind.Local).AddTicks(376),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 520, DateTimeKind.Local).AddTicks(377),
                            Duration = new TimeSpan(1901735833),
                            FilePath = "/music/Nightcore - Control.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Nightcore - Control",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 75,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 520, DateTimeKind.Local).AddTicks(1880),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 520, DateTimeKind.Local).AddTicks(1880),
                            Duration = new TimeSpan(1472925833),
                            FilePath = "/music/Nightcore - Rockefeller Street.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Nightcore - Rockefeller Street",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 76,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 520, DateTimeKind.Local).AddTicks(3075),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 520, DateTimeKind.Local).AddTicks(3076),
                            Duration = new TimeSpan(2801871666),
                            FilePath = "/music/No Game No Life Opening Full.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "No Game No Life Opening Full",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 77,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 520, DateTimeKind.Local).AddTicks(6865),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 520, DateTimeKind.Local).AddTicks(6871),
                            Duration = new TimeSpan(2905161666),
                            FilePath = "/music/Not Today Official MV.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Not Today Official MV",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 78,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 520, DateTimeKind.Local).AddTicks(8683),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 520, DateTimeKind.Local).AddTicks(8684),
                            Duration = new TimeSpan(6001253333),
                            FilePath = "/music/Nto - Trauma (Worakls Remix).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Nto - Trauma (Worakls Remix)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 79,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 521, DateTimeKind.Local).AddTicks(340),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 521, DateTimeKind.Local).AddTicks(345),
                            Duration = new TimeSpan(1710023333),
                            FilePath = "/music/Owari no Seraph OST - 1hundredknight M [終わりのセラフ].mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Owari no Seraph OST - 1hundredknight M [終わりのセラフ]",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 80,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 521, DateTimeKind.Local).AddTicks(1561),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 521, DateTimeKind.Local).AddTicks(1562),
                            Duration = new TimeSpan(0, 0, 2, 52, 584),
                            FilePath = "/music/Portals Theme Doom Eternal Ancient Gods Part 2 Soundtrack.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Portals Theme Doom Eternal Ancient Gods Part 2 Soundtrack",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 81,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 521, DateTimeKind.Local).AddTicks(2911),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 521, DateTimeKind.Local).AddTicks(2912),
                            Duration = new TimeSpan(2321677500),
                            FilePath = "/music/Post Malone - Better Now.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Post Malone - Better Now",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 82,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 521, DateTimeKind.Local).AddTicks(5410),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 521, DateTimeKind.Local).AddTicks(5415),
                            Duration = new TimeSpan(2181349166),
                            FilePath = "/music/Post Malone_ 21 Savage - Rockstar.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Post Malone_ 21 Savage - Rockstar",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 83,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 521, DateTimeKind.Local).AddTicks(6810),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 521, DateTimeKind.Local).AddTicks(6811),
                            Duration = new TimeSpan(2120575000),
                            FilePath = "/music/Reverse feat. G-Eazy.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Reverse feat. G-Eazy",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 84,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 521, DateTimeKind.Local).AddTicks(8571),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 521, DateTimeKind.Local).AddTicks(8573),
                            Duration = new TimeSpan(1755408333),
                            FilePath = "/music/Rich The Kid - Plug Walk (Audio).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Rich The Kid - Plug Walk (Audio)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 85,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 521, DateTimeKind.Local).AddTicks(9939),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 521, DateTimeKind.Local).AddTicks(9941),
                            Duration = new TimeSpan(1948425000),
                            FilePath = "/music/Right Now.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Right Now",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 86,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 522, DateTimeKind.Local).AddTicks(1282),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 522, DateTimeKind.Local).AddTicks(1284),
                            Duration = new TimeSpan(2102838333),
                            FilePath = "/music/RISE (ft. The Glitch Mob, Mako, and The Word Alive) Worlds 2018 - League of Legends.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "RISE (ft. The Glitch Mob, Mako, and The Word Alive) Worlds 2018 - League of Legends",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 87,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 522, DateTimeKind.Local).AddTicks(2462),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 522, DateTimeKind.Local).AddTicks(2463),
                            Duration = new TimeSpan(3396832500),
                            FilePath = "/music/Saber Alter vs Berserker Theme - Fatestay Night Movie Heaven's Feel II. Lost Butterfly OST.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Saber Alter vs Berserker Theme - Fatestay Night Movie Heaven's Feel II. Lost Butterfly OST",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 88,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 522, DateTimeKind.Local).AddTicks(3695),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 522, DateTimeKind.Local).AddTicks(3696),
                            Duration = new TimeSpan(1666725000),
                            FilePath = "/music/SAD!.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "SAD!",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 89,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 522, DateTimeKind.Local).AddTicks(7787),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 522, DateTimeKind.Local).AddTicks(7795),
                            Duration = new TimeSpan(1602038333),
                            FilePath = "/music/Saijaku Muhai no Bahamut  - Saijaku Muhai OST.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Saijaku Muhai no Bahamut  - Saijaku Muhai OST",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 90,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 522, DateTimeKind.Local).AddTicks(9662),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 522, DateTimeKind.Local).AddTicks(9667),
                            Duration = new TimeSpan(0, 0, 4, 13, 217),
                            FilePath = "/music/Saijaku Muhai no Bahamut Opening Hiryuu no Kishi - Extended(Sound only).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Saijaku Muhai no Bahamut Opening Hiryuu no Kishi - Extended(Sound only)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 91,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 523, DateTimeKind.Local).AddTicks(1350),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 523, DateTimeKind.Local).AddTicks(1352),
                            Duration = new TimeSpan(0, 0, 36, 46, 337),
                            FilePath = "/music/Sakura - 落ち着いて冷やす.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Sakura - 落ち着いて冷やす",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 92,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 523, DateTimeKind.Local).AddTicks(2796),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 523, DateTimeKind.Local).AddTicks(2797),
                            Duration = new TimeSpan(2224647500),
                            FilePath = "/music/SAMAHTA - graffiti (feat. Melody Federer).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "SAMAHTA - graffiti (feat. Melody Federer)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 93,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 523, DateTimeKind.Local).AddTicks(4022),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 523, DateTimeKind.Local).AddTicks(4024),
                            Duration = new TimeSpan(0, 0, 3, 59, 445),
                            FilePath = "/music/Seishun Buta Yarou wa Bunny Girl Senpai no Yume wo Minai ED [Part Section]Fukashigi no Carte.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Seishun Buta Yarou wa Bunny Girl Senpai no Yume wo Minai ED [Part Section]Fukashigi no Carte",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 94,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 523, DateTimeKind.Local).AddTicks(5602),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 523, DateTimeKind.Local).AddTicks(5605),
                            Duration = new TimeSpan(2497479166),
                            FilePath = "/music/Shawn Mendes - Mercy.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Shawn Mendes - Mercy",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 95,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 523, DateTimeKind.Local).AddTicks(6774),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 523, DateTimeKind.Local).AddTicks(6777),
                            Duration = new TimeSpan(2398884166),
                            FilePath = "/music/Shawn Mendes - Stitches.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Shawn Mendes - Stitches",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 96,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 523, DateTimeKind.Local).AddTicks(8169),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 523, DateTimeKind.Local).AddTicks(8170),
                            Duration = new TimeSpan(2375148333),
                            FilePath = "/music/Shawn Mendes - Theres Nothing Holdin Me Back.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Shawn Mendes - Theres Nothing Holdin Me Back",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 97,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 523, DateTimeKind.Local).AddTicks(9313),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 523, DateTimeKind.Local).AddTicks(9314),
                            Duration = new TimeSpan(2564513333),
                            FilePath = "/music/Shawn Mendes - Treat You Better.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Shawn Mendes - Treat You Better",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 98,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 524, DateTimeKind.Local).AddTicks(690),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 524, DateTimeKind.Local).AddTicks(691),
                            Duration = new TimeSpan(1860263333),
                            FilePath = "/music/Sheck Wes - Mo Bamba.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Sheck Wes - Mo Bamba",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 99,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 524, DateTimeKind.Local).AddTicks(2056),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 524, DateTimeKind.Local).AddTicks(2059),
                            Duration = new TimeSpan(2367323333),
                            FilePath = "/music/Shoko Makinohara ED Solo FULL 牧之原 翔子 ソロ - 不可思議のカルテ Fukashigi no Carte.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Shoko Makinohara ED Solo FULL 牧之原 翔子 ソロ - 不可思議のカルテ Fukashigi no Carte",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 100,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 524, DateTimeKind.Local).AddTicks(4600),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 524, DateTimeKind.Local).AddTicks(4606),
                            Duration = new TimeSpan(2032152500),
                            FilePath = "/music/Sickick - Infected.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Sickick - Infected",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 101,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 524, DateTimeKind.Local).AddTicks(6797),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 524, DateTimeKind.Local).AddTicks(6801),
                            Duration = new TimeSpan(2551732500),
                            FilePath = "/music/Sickick - Mind Games.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Sickick - Mind Games",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 102,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 524, DateTimeKind.Local).AddTicks(8728),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 524, DateTimeKind.Local).AddTicks(8729),
                            Duration = new TimeSpan(2362106666),
                            FilePath = "/music/SickickMusic - Lost My Way.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "SickickMusic - Lost My Way",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 103,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 525, DateTimeKind.Local).AddTicks(387),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 525, DateTimeKind.Local).AddTicks(388),
                            Duration = new TimeSpan(2763268333),
                            FilePath = "/music/Skan & Krale - No Glory (feat. M.I.M.E & Drama B).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Skan & Krale - No Glory (feat. M.I.M.E & Drama B)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 104,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 525, DateTimeKind.Local).AddTicks(1746),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 525, DateTimeKind.Local).AddTicks(1748),
                            Duration = new TimeSpan(861010833),
                            FilePath = "/music/SKI MASK THE SLUMP GOD x LIL PUMP - WHERE'S THE BLOW.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "SKI MASK THE SLUMP GOD x LIL PUMP - WHERE'S THE BLOW",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 105,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 525, DateTimeKind.Local).AddTicks(3282),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 525, DateTimeKind.Local).AddTicks(3283),
                            Duration = new TimeSpan(2190739166),
                            FilePath = "/music/SKRILLEX - Bangarang feat. Sirah.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "SKRILLEX - Bangarang feat. Sirah",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 106,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 525, DateTimeKind.Local).AddTicks(4899),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 525, DateTimeKind.Local).AddTicks(4900),
                            Duration = new TimeSpan(1666725000),
                            FilePath = "/music/Slim Jesus - Drill Time (T-Mass & Wildfellaz Remix).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Slim Jesus - Drill Time (T-Mass & Wildfellaz Remix)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 107,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 525, DateTimeKind.Local).AddTicks(6378),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 525, DateTimeKind.Local).AddTicks(6379),
                            Duration = new TimeSpan(3572112500),
                            FilePath = "/music/Soredemo sekai wa utsukushii - Beautiful rain full ver..mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Soredemo sekai wa utsukushii - Beautiful rain full ver.",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 108,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 526, DateTimeKind.Local).AddTicks(1682),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 526, DateTimeKind.Local).AddTicks(1694),
                            Duration = new TimeSpan(2411404166),
                            FilePath = "/music/Soredemo sekai wa Utsukushii - [Beautiful World - Koike Joanna].mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Soredemo sekai wa Utsukushii - [Beautiful World - Koike Joanna]",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 109,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 526, DateTimeKind.Local).AddTicks(6031),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 526, DateTimeKind.Local).AddTicks(6040),
                            Duration = new TimeSpan(2046237500),
                            FilePath = "/music/STéLOUSE - Sociopath (feat. Bryce Fox).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "STéLOUSE - Sociopath (feat. Bryce Fox)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 110,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 527, DateTimeKind.Local).AddTicks(104),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 527, DateTimeKind.Local).AddTicks(115),
                            Duration = new TimeSpan(2646415000),
                            FilePath = "/music/Sufian Suhaimi - Di Matamu.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Sufian Suhaimi - Di Matamu",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 111,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 527, DateTimeKind.Local).AddTicks(3687),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 527, DateTimeKind.Local).AddTicks(3698),
                            Duration = new TimeSpan(2951329166),
                            FilePath = "/music/Sword Art Online Alicization - War of Underworld Ending FullLiSA - unlasting.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Sword Art Online Alicization - War of Underworld Ending FullLiSA - unlasting",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 112,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 528, DateTimeKind.Local).AddTicks(1293),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 528, DateTimeKind.Local).AddTicks(1302),
                            Duration = new TimeSpan(2231429166),
                            FilePath = "/music/Sword Art Online Alicization Opening FullLiSA - ADAMASENG Sub.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Sword Art Online Alicization Opening FullLiSA - ADAMASENG Sub",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 113,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 528, DateTimeKind.Local).AddTicks(3823),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 528, DateTimeKind.Local).AddTicks(3825),
                            Duration = new TimeSpan(3378313333),
                            FilePath = "/music/Tengen Toppa Gurren Lagann OST Sorairo Days FULL VERSION.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Tengen Toppa Gurren Lagann OST Sorairo Days FULL VERSION",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 114,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 528, DateTimeKind.Local).AddTicks(5832),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 528, DateTimeKind.Local).AddTicks(5837),
                            Duration = new TimeSpan(2818565000),
                            FilePath = "/music/TETRA-FANG - Supernova.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "TETRA-FANG - Supernova",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 115,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 528, DateTimeKind.Local).AddTicks(8316),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 528, DateTimeKind.Local).AddTicks(8318),
                            Duration = new TimeSpan(2359498333),
                            FilePath = "/music/The Mirza - Lelah Mengalah.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "The Mirza - Lelah Mengalah",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 116,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 528, DateTimeKind.Local).AddTicks(9729),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 528, DateTimeKind.Local).AddTicks(9730),
                            Duration = new TimeSpan(37452797500),
                            FilePath = "/music/The Soul of Wind -  🗻 The Mountains 🗻.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "The Soul of Wind -  🗻 The Mountains 🗻",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 117,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 529, DateTimeKind.Local).AddTicks(1295),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 529, DateTimeKind.Local).AddTicks(1296),
                            Duration = new TimeSpan(1943990833),
                            FilePath = "/music/TheFatRat - Fly Away feat. Anjulie.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "TheFatRat - Fly Away feat. Anjulie",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 118,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 529, DateTimeKind.Local).AddTicks(2686),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 529, DateTimeKind.Local).AddTicks(2688),
                            Duration = new TimeSpan(2910639166),
                            FilePath = "/music/TheFatRat - Monody (feat. Laura Brehm).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "TheFatRat - Monody (feat. Laura Brehm)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 119,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 529, DateTimeKind.Local).AddTicks(5350),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 529, DateTimeKind.Local).AddTicks(5355),
                            Duration = new TimeSpan(0, 0, 3, 1, 227),
                            FilePath = "/music/TheFatRat - Time Lapse.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "TheFatRat - Time Lapse",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 120,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 529, DateTimeKind.Local).AddTicks(6943),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 529, DateTimeKind.Local).AddTicks(6944),
                            Duration = new TimeSpan(2491740833),
                            FilePath = "/music/TheFatRat - Unity.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "TheFatRat - Unity",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 121,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 529, DateTimeKind.Local).AddTicks(8118),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 529, DateTimeKind.Local).AddTicks(8119),
                            Duration = new TimeSpan(2474786666),
                            FilePath = "/music/TIIMO - Bangin In the Club.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "TIIMO - Bangin In the Club",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 122,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 529, DateTimeKind.Local).AddTicks(9472),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 529, DateTimeKind.Local).AddTicks(9474),
                            Duration = new TimeSpan(2949764166),
                            FilePath = "/music/Tokyo Ghoul - Glassy Sky [東京喰種 -トーキョーグール-].mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Tokyo Ghoul - Glassy Sky [東京喰種 -トーキョーグール-]",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 123,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 530, DateTimeKind.Local).AddTicks(1014),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 530, DateTimeKind.Local).AddTicks(1015),
                            Duration = new TimeSpan(1978420833),
                            FilePath = "/music/Tokyo Ghoul - Unravel (Marco B. Remix).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Tokyo Ghoul - Unravel (Marco B. Remix)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 124,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 530, DateTimeKind.Local).AddTicks(2337),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 530, DateTimeKind.Local).AddTicks(2337),
                            Duration = new TimeSpan(2481307500),
                            FilePath = "/music/Tokyo Ghoul - Unravel (OP Piano) .mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Tokyo Ghoul - Unravel (OP Piano) ",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 125,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 530, DateTimeKind.Local).AddTicks(3985),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 530, DateTimeKind.Local).AddTicks(3986),
                            Duration = new TimeSpan(2621635833),
                            FilePath = "/music/Tokyo Ghoul - Unravel 2.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Tokyo Ghoul - Unravel 2",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 126,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 530, DateTimeKind.Local).AddTicks(5793),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 530, DateTimeKind.Local).AddTicks(5798),
                            Duration = new TimeSpan(0, 0, 4, 1, 323),
                            FilePath = "/music/Tokyo Ghoul - Unravel.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Tokyo Ghoul - Unravel",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 127,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 530, DateTimeKind.Local).AddTicks(7924),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 530, DateTimeKind.Local).AddTicks(7925),
                            Duration = new TimeSpan(1975551666),
                            FilePath = "/music/Tokyo Machine - FLY [Monstercat Release].mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Tokyo Machine - FLY [Monstercat Release]",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 128,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 530, DateTimeKind.Local).AddTicks(9135),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 530, DateTimeKind.Local).AddTicks(9136),
                            Duration = new TimeSpan(2304201666),
                            FilePath = "/music/Trapcity - Dead To Me (feat. Lox Chatterbox).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Trapcity - Dead To Me (feat. Lox Chatterbox)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 129,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 531, DateTimeKind.Local).AddTicks(626),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 531, DateTimeKind.Local).AddTicks(628),
                            Duration = new TimeSpan(37651552500),
                            FilePath = "/music/Trapcity - Samurai☯ Lofi.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Trapcity - Samurai☯ Lofi",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 130,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 531, DateTimeKind.Local).AddTicks(2048),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 531, DateTimeKind.Local).AddTicks(2049),
                            Duration = new TimeSpan(2689713333),
                            FilePath = "/music/Trapcity - Trap Queen (Crankdat Remix).mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Trapcity - Trap Queen (Crankdat Remix)",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 131,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 531, DateTimeKind.Local).AddTicks(3559),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 531, DateTimeKind.Local).AddTicks(3560),
                            Duration = new TimeSpan(3144867499),
                            FilePath = "/music/Travis Scott - SICKO MODE.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Travis Scott - SICKO MODE",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 132,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 531, DateTimeKind.Local).AddTicks(5281),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 531, DateTimeKind.Local).AddTicks(5285),
                            Duration = new TimeSpan(1863132500),
                            FilePath = "/music/Two Feet - I Feel Like Im Drowning.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Two Feet - I Feel Like Im Drowning",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 133,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 531, DateTimeKind.Local).AddTicks(6894),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 531, DateTimeKind.Local).AddTicks(6895),
                            Duration = new TimeSpan(2292203333),
                            FilePath = "/music/Unlike Pluto ft. Mike Taylor - Everything Black.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Unlike Pluto ft. Mike Taylor - Everything Black",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 134,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 531, DateTimeKind.Local).AddTicks(8314),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 531, DateTimeKind.Local).AddTicks(8316),
                            Duration = new TimeSpan(3559853333),
                            FilePath = "/music/Wishing Lyrics Rem(minase inori) ReZero.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Wishing Lyrics Rem(minase inori) ReZero",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 135,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 531, DateTimeKind.Local).AddTicks(9571),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 531, DateTimeKind.Local).AddTicks(9573),
                            Duration = new TimeSpan(949433333),
                            FilePath = "/music/XXXTENTACION - BAD!.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "XXXTENTACION - BAD!",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 136,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 532, DateTimeKind.Local).AddTicks(871),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 532, DateTimeKind.Local).AddTicks(872),
                            Duration = new TimeSpan(1945555833),
                            FilePath = "/music/Yama-春を告げる(Haru wo tsugeru) [KanjiRomajiEnglish Lyrics].mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Yama-春を告げる(Haru wo tsugeru) [KanjiRomajiEnglish Lyrics]",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 137,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 532, DateTimeKind.Local).AddTicks(1943),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 532, DateTimeKind.Local).AddTicks(1944),
                            Duration = new TimeSpan(2141441666),
                            FilePath = "/music/Yasuha - Flyday Chinatown.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Yasuha - Flyday Chinatown",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 138,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 532, DateTimeKind.Local).AddTicks(3048),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 532, DateTimeKind.Local).AddTicks(3048),
                            Duration = new TimeSpan(2595291666),
                            FilePath = "/music/YOASOBI 夜に駆ける English & Romanji Lyrics.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "YOASOBI 夜に駆ける English & Romanji Lyrics",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 139,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 532, DateTimeKind.Local).AddTicks(4154),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 532, DateTimeKind.Local).AddTicks(4156),
                            Duration = new TimeSpan(2042846666),
                            FilePath = "/music/YOASOBIハルジオンOfficial Music Video.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "YOASOBIハルジオンOfficial Music Video",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 140,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 532, DateTimeKind.Local).AddTicks(5846),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 532, DateTimeKind.Local).AddTicks(5850),
                            Duration = new TimeSpan(2276553333),
                            FilePath = "/music/Yuna - Longing.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Yuna - Longing",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 141,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 532, DateTimeKind.Local).AddTicks(9030),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 532, DateTimeKind.Local).AddTicks(9031),
                            Duration = new TimeSpan(1973986666),
                            FilePath = "/music/Yuna - Smile for you .mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "Yuna - Smile for you ",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 142,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 533, DateTimeKind.Local).AddTicks(404),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 533, DateTimeKind.Local).AddTicks(406),
                            Duration = new TimeSpan(3511077500),
                            FilePath = "/music/タイニーリトルアシアンタム.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "タイニーリトルアシアンタム",
                            UpdateBy = "Seeder"
                        },
                        new
                        {
                            SongId = 143,
                            ArtistId = 1,
                            CreatedBy = "Seeder",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2025, 2, 9, 0, 50, 47, 533, DateTimeKind.Local).AddTicks(1428),
                            DateUpdated = new DateTime(2025, 2, 9, 0, 50, 47, 533, DateTimeKind.Local).AddTicks(1429),
                            Duration = new TimeSpan(0, 0, 3, 6, 548),
                            FilePath = "/music/レペゼン地球66thシングルO2MEN.mp3",
                            GenID = 1,
                            Id = 0,
                            LikedS = "NotLiked",
                            Name = "レペゼン地球66thシングルO2MEN",
                            UpdateBy = "Seeder"
                        });
                });

            modelBuilder.Entity("Pancake_Final.Domain.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubId")
                        .HasColumnType("int");

                    b.Property<string>("SubPlans")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubStatus")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Subscription");
                });

            modelBuilder.Entity("Pancake_Final.Domain.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("ASPNetUserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayListID")
                        .HasColumnType("int");

                    b.Property<int>("SubId")
                        .HasColumnType("int");

                    b.Property<string>("SubStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("ASPNetUserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Pancake_Final.Data.Pancake_FinalUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Pancake_Final.Data.Pancake_FinalUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pancake_Final.Data.Pancake_FinalUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Pancake_Final.Data.Pancake_FinalUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pancake_Final.Domain.Playlist", b =>
                {
                    b.HasOne("Pancake_Final.Domain.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Pancake_Final.Domain.Song", b =>
                {
                    b.HasOne("Pancake_Final.Domain.Artists", null)
                        .WithMany("Songs")
                        .HasForeignKey("ArtistsArtistID");

                    b.HasOne("Pancake_Final.Domain.Playlist", "Playlist")
                        .WithMany("Songs")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Playlist");
                });

            modelBuilder.Entity("Pancake_Final.Domain.User", b =>
                {
                    b.HasOne("Pancake_Final.Data.Pancake_FinalUser", "user")
                        .WithMany()
                        .HasForeignKey("ASPNetUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Pancake_Final.Domain.Artists", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Pancake_Final.Domain.Playlist", b =>
                {
                    b.Navigation("Songs");
                });
#pragma warning restore 612, 618
        }
    }
}
