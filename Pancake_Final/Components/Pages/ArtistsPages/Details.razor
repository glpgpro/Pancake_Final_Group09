@page "/artists/details"
@using Microsoft.EntityFrameworkCore
@using Pancake_Final.Domain
@inject IDbContextFactory<Pancake_Final.Data.Pancake_FinalContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Artists</h2>
    <hr />
    @if (artists is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">SongId</dt>
            <dd class="col-sm-10">@artists.SongId</dd>
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@artists.Name</dd>
        </dl>
        <div>
            <a href="@($"/artists/edit?artistid={artists.ArtistID}")">Edit</a> |
            <a href="@($"/artists")">Back to List</a>
        </div>
    }
</div>

@code {
    private Artists? artists;

    [SupplyParameterFromQuery]
    private int ArtistID { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        artists = await context.Artists.FirstOrDefaultAsync(m => m.ArtistID == ArtistID);

        if (artists is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
